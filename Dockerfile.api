###########
# BUILDER #
###########

# pull official base image
FROM python:3.8.3 as builder

# set work directory
WORKDIR /usr/src/app

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install psycopg2 dependencies
RUN apt-get update \
  && apt-get install -y --no-install-recommends \
  gcc python3-dev musl-dev libxml2-dev libxslt-dev

# lint
RUN pip install --upgrade pip
RUN pip install flake8
COPY . .
# Enable folloing line to lynt validation
# RUN flake8 --ignore=E501,F401 .

# install dependencies
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt
# RUN pip install -r requirements.txt


#########
# FINAL #
#########

# pull official base image
FROM python:3.8.3

# create directory for the app user
RUN mkdir -p /home/app

# create the app user
RUN addgroup --system app && adduser --system app
RUN usermod -a -G app app

# create the appropriate directories
ENV HOME=/home/app
ENV APP_HOME=/home/app
ENV DATA_DIR=/data
# RUN mkdir $APP_HOME
RUN mkdir $DATA_DIR
WORKDIR $APP_HOME

# install dependencies
#RUN apt-get update && apt-get install -y --no-install-recommends libpq
COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .
RUN pip install --no-cache /wheels/*

# copy entrypoint-prod.sh
COPY ./web/entrypoint.api.sh $APP_HOME
RUN chmod 777 $APP_HOME/entrypoint.api.sh

# copy project
COPY . $APP_HOME

# chown all the files to the app user
RUN chown -R app:app $APP_HOME
RUN chown -R app:app $DATA_DIR

# change to the app user
USER app

# run entrypoint.prod.sh
ENTRYPOINT ["/home/app/entrypoint.api.sh"]